}
}
rearranged_list
k <- 4
rearranged_list <- list()
array1 <- c(k) # k value as first element of array1
stop_outer_loop <- FALSE
for (x in 1:4)
{
for (i in 1:(2*n))
{
if (alist[[i]][2] == k)
{
rearranged_list <- append(rearranged_list, list(alist[[i]]))
stop_outer_loop = TRUE
break # stop loop
}
else if (alist[[i]][1] == array1[x])
{
array1 <- c(array1, alist[[i]][2]) # add second element to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
}
}
if (stop_outer_loop)
{
break
}
}
rearranged_list
size(rearranged_list)
length(rearranged_list)
k <- 2
rearranged_list <- list()
array1 <- c(k) # k value as first element of array1
stop_outer_loop <- FALSE
for (x in 1:4)
{
for (i in 1:(2*n))
{
if (alist[[i]][2] == k)
{
rearranged_list <- append(rearranged_list, list(alist[[i]]))
stop_outer_loop = TRUE
break # stop loop
}
else if (alist[[i]][1] == array1[x])
{
array1 <- c(array1, alist[[i]][2]) # add second element to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
}
}
if (stop_outer_loop)
{
break
}
}
rearranged_list
k <- 2
rearranged_list <- list()
array1 <- c(k) # k value as first element of array1
stop_outer_loop <- FALSE
for (x in 1:4)
{
for (i in 1:(2*n))
{
if (alist[[i]][1] == array1[x])
{
array1 <- c(array1, alist[[i]][2]) # add second element to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
}
else if (alist[[i]][2] == k)
{
rearranged_list <- append(rearranged_list, list(alist[[i]]))
stop_outer_loop = TRUE
break # stop loop
}
}
if (stop_outer_loop)
{
break
}
}
rearranged_list
k <- 2
rearranged_list <- list()
array1 <- c(k) # k value as first element of array1
stop_outer_loop <- FALSE
for (x in 1:(2*n))
{
for (i in 1:(2*n))
{
if (alist[[i]][1] == array1[x])
{
array1 <- c(array1, alist[[i]][2]) # add second element to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
}
else if (alist[[i]][2] == k)
{
rearranged_list <- append(rearranged_list, list(alist[[i]]))
stop_outer_loop = TRUE
break # stop loop
}
}
if (stop_outer_loop)
{
break
}
}
rearranged_list
k <- 2
rearranged_list <- list()
card_array <- c(k) # k value as first element of card_array
stop_outer_loop <- FALSE
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over list
{
if (alist[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
}
else if (alist[[i]][2] == k)
{
card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
if (stop_outer_loop)
{
break
}
}
rearranged_list
alist
k <- 2
rearranged_list <- list()
card_array <- c(k) # k value as first element of card_array
stop_outer_loop <- FALSE
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over list
{
if (alist[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
}
else if (card_array[x] == k) #(alist[[i]][2] == k)
{
card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
if (stop_outer_loop)
{
break
}
}
rearranged_list
k <- 2
rearranged_list <- list()
card_array <- c(k) # k value as first element of card_array
stop_outer_loop <- FALSE
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over list
{
if (alist[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
}
else if (card_array[x+1] == k) #(alist[[i]][2] == k)
{
card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
if (stop_outer_loop)
{
break
}
}
k <- 2
rearranged_list <- list()
card_array <- c(k) # k value as first element of card_array
stop_outer_loop <- FALSE
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over list
{
if (alist[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
}
else if (card_array[(x+1)] == k) #(alist[[i]][2] == k)
{
card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
if (stop_outer_loop)
{
break
}
}
k <- 2
rearranged_list <- list()
card_array <- c(k) # k value as first element of card_array
stop_outer_loop <- FALSE
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over list
{
if (alist[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
if (alist[[i]][2] == k) #(alist[[i]][2] == k)
{
#card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
#rearranged_list <- append(rearranged_list, list(alist[[i]]))
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
rearranged_list
k <- 2
rearranged_list <- list()
card_array <- c(k) # k value as first element of card_array
stop_outer_loop <- FALSE
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over list
{
if (alist[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
if (alist[[i]][2] == k) #(alist[[i]][2] == k)
{
card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
#rearranged_list <- append(rearranged_list, list(alist[[i]]))
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
rearranged_list
k <- 2
rearranged_list <- list()
card_array <- c(k) # k value as first element of card_array
stop_outer_loop <- FALSE
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over list
{
if (alist[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
if (alist[[i]][2] == k) #(alist[[i]][2] == k)
{
#card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
#rearranged_list <- append(rearranged_list, list(alist[[i]]))
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
rearranged_list
k <- 2
rearranged_list <- list()
card_array <- c(k) # k value as first element of card_array
stop_outer_loop <- FALSE
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over list
{
if (alist[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
if (alist[[i]][2] == k) #(alist[[i]][2] == k)
{
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#rearranged_list <- append(rearranged_list, list(alist[[i]]))
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
rearranged_list
n<-6
alist<-list()
c1<-c(1:(2*n))
c2<-c(sample(1:(2*n)))
for (i in 1:(2*n))
{
alist <- append(alist,list(c(c1[i],c2[i]))) # maybe can remove the "c" for list(c...)
}
alist
n<-6
alist<-list()
c1<-c(1:(2*n))
c2<-c(sample(1:(2*n)))
for (i in 1:(2*n))
{
alist <- append(alist,list(c1[i],c2[i])) # maybe can remove the "c" for list(c...)
}
alist
n<-6
alist<-list()
c1<-c(1:(2*n))
c2<-c(sample(1:(2*n)))
for (i in 1:(2*n))
{
alist <- append(alist,list(c(c1[i],c2[i])))
}
alist
k <- 3
rearranged_list <- list()
card_array <- c(k) # k value as first element of card_array
stop_outer_loop <- FALSE
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over list
{
if (alist[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, alist[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(alist[[i]]))
if (alist[[i]][2] == k) #(alist[[i]][2] == k)
{
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#rearranged_list <- append(rearranged_list, list(alist[[i]]))
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
rearranged_list
nreps <- 2
counter <- 0
for (y in 1:nreps)
{
random_allocation<-list()
box_numbers<-c(1:(2*n))
card_numbers<-c(sample(1:(2*n)))
for (i in 1:(2*n))
{
random_allocation <- append(random_allocation,list(c(box_numbers[i],card_numbers[i])))
}
rearranged_list <- list()
card_array <- c(k) # k value as first element of card_array
stop_outer_loop <- FALSE
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over list
{
if (random_allocation[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, random_allocation[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(random_allocation[[i]]))
if (random_allocation[[i]][2] == k)
{
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#rearranged_list <- append(rearranged_list, list(random_allocation[[i]]))
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
if (length(rearranged_list) <= n)
{
counter <- counter + 1
}
}
counter
n <- 12
k <- 3
nreps <- 4
counter <- 0
for (y in 1:nreps)
{
random_allocation<-list()
box_numbers<-c(1:(2*n))
card_numbers<-c(sample(1:(2*n)))
for (i in 1:(2*n))
{
random_allocation <- append(random_allocation,list(c(box_numbers[i],card_numbers[i])))
}
rearranged_list <- list()
card_array <- c(k) # k value as first element of card_array
stop_outer_loop <- FALSE
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over list
{
if (random_allocation[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, random_allocation[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(random_allocation[[i]]))
if (random_allocation[[i]][2] == k)
{
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#rearranged_list <- append(rearranged_list, list(random_allocation[[i]]))
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
if (length(rearranged_list) <= n)
{
counter <- counter + 1
}
}
counter
Pone <- function(n, k, strategy, nreps = 2)
{
if (strategy == 1)
{
counter <- 0
for (y in 1:nreps)
{
random_allocation<-list()
box_numbers<-c(1:(2*n))
card_numbers<-c(sample(1:(2*n)))
for (i in 1:(2*n))
{
random_allocation <- append(random_allocation,list(c(box_numbers[i],card_numbers[i])))
}
rearranged_list <- list()
card_array <- c(k) # k value as first element of card_array
stop_outer_loop <- FALSE
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over list
{
if (random_allocation[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, random_allocation[[i]][2]) # add new card number to array 1
rearranged_list <- append(rearranged_list, list(random_allocation[[i]]))
if (random_allocation[[i]][2] == k)
{
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#rearranged_list <- append(rearranged_list, list(random_allocation[[i]]))
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
if (length(rearranged_list) <= n)
{
counter <- counter + 1
}
}
return(counter / nreps)
}
}
Pone(12,3,1,4)
