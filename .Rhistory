{
card_array <- c(card_array, random_allocation[[i]][2]) # add new card number to array 1
rearranged_list <- c(rearranged_list, random_allocation[[i]])
print(random_allocation[[i]][1], " is removed")
loop2A <- loop2A[!loop2A %in% random_allocation[[i]][1]] # remove used number
print("here 1")
if (random_allocation[[i]][2] == k)
{
print("end loop")
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#loop2A <- loop2A[!loop2A %in% k] # remove k element
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
}
if(length(rearranged_list) != 0)
{
loop1A <- append(loop1A,list(unique(rearranged_list)))
#print(rearranged_list)
}
}
loop1A<-list()
len_array<-list()
loop2A<-c(1:(2*n))
stop_outer_loop <- FALSE
# loop 2
for (y in 1:(2*n)){
k <- y
rearranged_list <- c()
card_array <- c(k) # k value as first element of card_array
if (y %in% loop2A){
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over box
{
if (random_allocation[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, random_allocation[[i]][2]) # add new card number to array 1
rearranged_list <- c(rearranged_list, random_allocation[[i]])
print(random_allocation[[i]][1] + " is removed")
loop2A <- loop2A[!loop2A %in% random_allocation[[i]][1]] # remove used number
print("here 1")
if (random_allocation[[i]][2] == k)
{
print("end loop")
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#loop2A <- loop2A[!loop2A %in% k] # remove k element
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
}
if(length(rearranged_list) != 0)
{
loop1A <- append(loop1A,list(unique(rearranged_list)))
#print(rearranged_list)
}
}
loop1A<-list()
len_array<-list()
loop2A<-c(1:(2*n))
stop_outer_loop <- FALSE
# loop 2
for (y in 1:(2*n)){
k <- y
rearranged_list <- c()
card_array <- c(k) # k value as first element of card_array
if (y %in% loop2A){
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over box
{
if (random_allocation[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, random_allocation[[i]][2]) # add new card number to array 1
rearranged_list <- c(rearranged_list, random_allocation[[i]])
print(random_allocation[[i]][1])
loop2A <- loop2A[!loop2A %in% random_allocation[[i]][1]] # remove used number
print("here 1")
if (random_allocation[[i]][2] == k)
{
print("end loop")
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#loop2A <- loop2A[!loop2A %in% k] # remove k element
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
}
if(length(rearranged_list) != 0)
{
loop1A <- append(loop1A,list(unique(rearranged_list)))
#print(rearranged_list)
}
}
loop1A
loop1A<-list()
len_array<-list()
loop2A<-c(1:(2*n))
stop_outer_loop <- FALSE
# loop 2
for (y in 1:(2*n)){
k <- y
rearranged_list <- c()
card_array <- c(k) # k value as first element of card_array
if (y %in% loop2A){
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over box
{
if (random_allocation[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, random_allocation[[i]][2]) # add new card number to array 1
rearranged_list <- c(rearranged_list, random_allocation[[i]])
print(random_allocation[[i]][1])
loop2A <- loop2A[!loop2A %in% random_allocation[[i]][1]] # remove used number
print(loop2A)
if (random_allocation[[i]][2] == k)
{
print("end loop")
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#loop2A <- loop2A[!loop2A %in% k] # remove k element
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
}
if(length(rearranged_list) != 0)
{
loop1A <- append(loop1A,list(unique(rearranged_list)))
#print(rearranged_list)
}
}
loop1A
loop1A<-list()
len_array<-list()
loop2A<-c(1:(2*n))
stop_outer_loop <- FALSE
# loop 2
for (y in 1:(2*n)){
k <- y
rearranged_list <- c()
card_array <- c(k) # k value as first element of card_array
if (y %in% loop2A){
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over box
{
if (random_allocation[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, random_allocation[[i]][2]) # add new card number to array 1
rearranged_list <- c(rearranged_list, random_allocation[[i]])
print(random_allocation[[i]][1])
loop2A <- loop2A[!loop2A %in% random_allocation[[i]][1]] # remove used number
print("here")
print(loop2A)
if (random_allocation[[i]][2] == k)
{
print("end loop")
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#loop2A <- loop2A[!loop2A %in% k] # remove k element
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
}
if(length(rearranged_list) != 0)
{
loop1A <- append(loop1A,list(unique(rearranged_list)))
#print(rearranged_list)
}
}
loop1A
loop1A<-list()
len_array<-list()
loop2A<-c(1:(2*n))
stop_outer_loop <- FALSE
# loop 2
for (y in 1:(2*n)){
k <- y
rearranged_list <- c()
card_array <- c(k) # k value as first element of card_array
if (y %in% loop2A){
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over box
{
if (random_allocation[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, random_allocation[[i]][2]) # add new card number to array 1
rearranged_list <- c(rearranged_list, random_allocation[[i]])
print(random_allocation[[i]][1])
loop2A <- loop2A[!loop2A %in% random_allocation[[i]][2]] # remove used number
print("here")
print(loop2A)
if (random_allocation[[i]][2] == k)
{
print("end loop")
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#loop2A <- loop2A[!loop2A %in% k] # remove k element
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
}
if(length(rearranged_list) != 0)
{
loop1A <- append(loop1A,list(unique(rearranged_list)))
#print(rearranged_list)
}
}
loop1A
c4<-c(1:(2*n))
lengths_tab<-rep(0,(2*n))
for (i in 1:length(loop1A))
{
addition <-c(match(c4,length(loop1A[[i]])))
addition[is.na(addition)] = 0
lengths_tab <- lengths_tab +  addition
}
lengths_tab
### testing
n <- 5
box_numbers<-c(1:(2*n))
card_numbers<-c(sample(1:(2*n)))
random_allocation<-list()
for (i in 1:(2*n))
{
random_allocation <- append(random_allocation,list(c(box_numbers[i],card_numbers[i])))
}
random_allocation
loop1A<-list()
len_array<-list()
loop2A<-c(1:(2*n))
stop_outer_loop <- FALSE
# loop 2
for (y in 1:(2*n)){
k <- y
rearranged_list <- c()
card_array <- c(k) # k value as first element of card_array
if (y %in% loop2A){
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over box
{
if (random_allocation[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, random_allocation[[i]][2]) # add new card number to array 1
rearranged_list <- c(rearranged_list, random_allocation[[i]])
print(random_allocation[[i]][1])
loop2A <- loop2A[!loop2A %in% random_allocation[[i]][2]] # remove used number
print("here")
print(loop2A)
if (random_allocation[[i]][2] == k)
{
print("end loop")
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#loop2A <- loop2A[!loop2A %in% k] # remove k element
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
}
if(length(rearranged_list) != 0)
{
loop1A <- append(loop1A,list(unique(rearranged_list)))
}
}
loop1A
c4<-c(1:(2*n))
lengths_tab<-rep(0,(2*n))
for (i in 1:length(loop1A))
{
addition <-c(match(c4,length(loop1A[[i]])))
addition[is.na(addition)] = 0
lengths_tab <- lengths_tab +  addition
}
lengths_tab
loop1A<-list()
len_array<-list()
loop2A<-c(1:(2*n))
stop_outer_loop <- FALSE
# loop 2
for (y in 1:(2*n)){
k <- y
rearranged_list <- c()
card_array <- c(k) # k value as first element of card_array
if (y %in% loop2A){
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over box
{
if (random_allocation[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, random_allocation[[i]][2]) # add new card number to array 1
rearranged_list <- c(rearranged_list, random_allocation[[i]])
print(random_allocation[[i]][1])
loop2A <- loop2A[!loop2A %in% random_allocation[[i]][1]] # remove used number
loop2A <- loop2A[!loop2A %in% random_allocation[[i]][2]] # remove used number
print("here")
print(loop2A)
if (random_allocation[[i]][2] == k)
{
print("end loop")
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#loop2A <- loop2A[!loop2A %in% k] # remove k element
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
}
if(length(rearranged_list) != 0)
{
loop1A <- append(loop1A,list(unique(rearranged_list)))
}
}
loop1A
c4<-c(1:(2*n))
lengths_tab<-rep(0,(2*n))
for (i in 1:length(loop1A))
{
addition <-c(match(c4,length(loop1A[[i]])))
addition[is.na(addition)] = 0
lengths_tab <- lengths_tab +  addition
}
lengths_tab
###
### testing
n<-6
random_allocation<-list()
box_numbers<-c(sample(1:(2*n)))
card_numbers<-c(sample(1:(2*n)))
for (i in 1:(2*n))
{
random_allocation <- append(random_allocation,list(c(box_numbers[i],card_numbers[i])))
}
### testing
n <- 5
box_numbers<-c(1:(2*n))
card_numbers<-c(sample(1:(2*n)))
random_allocation<-list()
for (i in 1:(2*n))
{
random_allocation <- append(random_allocation,list(c(box_numbers[i],card_numbers[i])))
}
random_allocation
loop1A<-list()
len_array<-list()
loop2A<-c(1:(2*n))
stop_outer_loop <- FALSE
# loop 2
for (y in 1:(2*n)){
k <- y
rearranged_list <- c()
card_array <- c(k) # k value as first element of card_array
if (y %in% loop2A){
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over box
{
if (random_allocation[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, random_allocation[[i]][2]) # add new card number to array 1
rearranged_list <- c(rearranged_list, random_allocation[[i]])
print(random_allocation[[i]][1])
loop2A <- loop2A[!loop2A %in% random_allocation[[i]][1]] # remove used number
loop2A <- loop2A[!loop2A %in% random_allocation[[i]][2]] # remove used number
print("here")
print(loop2A)
if (random_allocation[[i]][2] == k)
{
print("end loop")
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#loop2A <- loop2A[!loop2A %in% k] # remove k element
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
}
if(length(rearranged_list) != 0)
{
loop1A <- append(loop1A,list(unique(rearranged_list)))
}
}
loop1A
c4<-c(1:(2*n))
lengths_tab<-rep(0,(2*n))
for (i in 1:length(loop1A))
{
addition <-c(match(c4,length(loop1A[[i]])))
addition[is.na(addition)] = 0
lengths_tab <- lengths_tab +  addition
}
lengths_tab
n <- 5
box_numbers<-c(1:(2*n))
card_numbers<-c(sample(1:(2*n)))
random_allocation<-list()
for (i in 1:(2*n))
{
random_allocation <- append(random_allocation,list(c(box_numbers[i],card_numbers[i])))
}
random_allocation
n <- 5
box_numbers<-c(1:(2*n))
card_numbers<-c(sample(1:(2*n)))
random_allocation<-list()
for (i in 1:(2*n))
{
random_allocation <- append(random_allocation,list(c(box_numbers[i],card_numbers[i])))
}
random_allocation
loop1A<-list()
len_array<-list()
loop2A<-c(1:(2*n))
stop_outer_loop <- FALSE
# loop 2
for (y in 1:(2*n)){
k <- y
rearranged_list <- c()
card_array <- c(k) # k value as first element of card_array
if (y %in% loop2A){
for (x in 1:(2*n)) # loop over sequence of card numbers
{
for (i in 1:(2*n)) # loop over box
{
if (random_allocation[[i]][1] == card_array[x]) # if the box number is equal to the previous card number
{
card_array <- c(card_array, random_allocation[[i]][2]) # add new card number to array 1
rearranged_list <- c(rearranged_list, random_allocation[[i]])
print(random_allocation[[i]][1])
loop2A <- loop2A[!loop2A %in% random_allocation[[i]][1]] # remove used number
loop2A <- loop2A[!loop2A %in% random_allocation[[i]][2]] # remove used number
print("here")
print(loop2A)
if (random_allocation[[i]][2] == k)
{
print("end loop")
card_array <- head(card_array,-1) # remove the repeated card number (the last element)
#loop2A <- loop2A[!loop2A %in% k] # remove k element
stop_outer_loop = TRUE # stop outer loop
break # stop loop
}
}
}
if (stop_outer_loop)
{
break
}
}
}
if(length(rearranged_list) != 0)
{
loop1A <- append(loop1A,list(unique(rearranged_list)))
}
}
loop1A
